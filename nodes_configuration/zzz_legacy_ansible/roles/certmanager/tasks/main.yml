---
# roles/certmanager/tasks/main.yml

- name: Añadir repo de Helm de Jetstack
  community.kubernetes.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io
    state: present

- name: Crear namespace cert-manager
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ certmanager_namespace }}"
    state: present

- name: Instalar CRDs de cert-manager (Helm)
  community.kubernetes.helm:
    name: cert-manager-crds
    chart_ref: jetstack/cert-manager
    version: "{{ certmanager_version }}"
    namespace: "{{ certmanager_namespace }}"
    release_namespace: "{{ certmanager_namespace }}"
    create_namespace: false
    values: []
    # Solo los CRDs
    extra_args: ["--set", "installCRDs=true", "--set", "installOnlyCRDs=true"]
    state: present

- name: Instalar cert-manager con Helm
  community.kubernetes.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    version: "{{ certmanager_version }}"
    namespace: "{{ certmanager_namespace }}"
    create_namespace: false
    values: []
    state: present

- name: Esperar a que el CRD Certificate esté listo
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: certificates.cert-manager.io
  register: crd_info
  until: crd_info.resources | length > 0
  retries: 10
  delay: 6

- name: Crear ClusterIssuer de Let’s Encrypt
  kubernetes.core.k8s:
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: letsencrypt
      spec:
        acme:
          server: https://acme-v02.api.letsencrypt.org/directory
          email: "{{ letsencrypt_email }}"
          privateKeySecretRef:
            name: le-secret
          solvers:
            - http01:
                ingress:
                  ingressClassName: traefik
  state: present
